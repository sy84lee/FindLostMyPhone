// Generated by view binder compiler. Do not edit!
package com.sy.publicapiviewer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SearchView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.sy.publicapiviewer.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final RecyclerView fragmentAdapter;

  @NonNull
  public final Button loadStateCancel;

  @NonNull
  public final TextView loadStateErrorMessage;

  @NonNull
  public final ProgressBar loadStateProgress;

  @NonNull
  public final Button loadStateRetry;

  @NonNull
  public final ImageView mark;

  @NonNull
  public final TextView readmeMessase;

  @NonNull
  public final AppBarLayout searchBar;

  @NonNull
  public final SearchView searchView;

  private FragmentListBinding(@NonNull ConstraintLayout rootView,
      @NonNull RecyclerView fragmentAdapter, @NonNull Button loadStateCancel,
      @NonNull TextView loadStateErrorMessage, @NonNull ProgressBar loadStateProgress,
      @NonNull Button loadStateRetry, @NonNull ImageView mark, @NonNull TextView readmeMessase,
      @NonNull AppBarLayout searchBar, @NonNull SearchView searchView) {
    this.rootView = rootView;
    this.fragmentAdapter = fragmentAdapter;
    this.loadStateCancel = loadStateCancel;
    this.loadStateErrorMessage = loadStateErrorMessage;
    this.loadStateProgress = loadStateProgress;
    this.loadStateRetry = loadStateRetry;
    this.mark = mark;
    this.readmeMessase = readmeMessase;
    this.searchBar = searchBar;
    this.searchView = searchView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.fragmentAdapter;
      RecyclerView fragmentAdapter = ViewBindings.findChildViewById(rootView, id);
      if (fragmentAdapter == null) {
        break missingId;
      }

      id = R.id.load_state_cancel;
      Button loadStateCancel = ViewBindings.findChildViewById(rootView, id);
      if (loadStateCancel == null) {
        break missingId;
      }

      id = R.id.load_state_errorMessage;
      TextView loadStateErrorMessage = ViewBindings.findChildViewById(rootView, id);
      if (loadStateErrorMessage == null) {
        break missingId;
      }

      id = R.id.load_state_progress;
      ProgressBar loadStateProgress = ViewBindings.findChildViewById(rootView, id);
      if (loadStateProgress == null) {
        break missingId;
      }

      id = R.id.load_state_retry;
      Button loadStateRetry = ViewBindings.findChildViewById(rootView, id);
      if (loadStateRetry == null) {
        break missingId;
      }

      id = R.id.mark;
      ImageView mark = ViewBindings.findChildViewById(rootView, id);
      if (mark == null) {
        break missingId;
      }

      id = R.id.readme_messase;
      TextView readmeMessase = ViewBindings.findChildViewById(rootView, id);
      if (readmeMessase == null) {
        break missingId;
      }

      id = R.id.searchBar;
      AppBarLayout searchBar = ViewBindings.findChildViewById(rootView, id);
      if (searchBar == null) {
        break missingId;
      }

      id = R.id.searchView;
      SearchView searchView = ViewBindings.findChildViewById(rootView, id);
      if (searchView == null) {
        break missingId;
      }

      return new FragmentListBinding((ConstraintLayout) rootView, fragmentAdapter, loadStateCancel,
          loadStateErrorMessage, loadStateProgress, loadStateRetry, mark, readmeMessase, searchBar,
          searchView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
